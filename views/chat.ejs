<html>
<head>
  <meta charset="UTF-8">
  <title>chatriver</title>
  <link rel="stylesheet" type="text/css" href="/stylesheets/userpage.css">

  <script type="text/javascript" src="/javascripts/jquery-1.7.1.min.js"></script>
  <script src="./socket.io/socket.io.js"></script>
</head>

<body>
<!--
  <input type="text" id="name_input" style="width:100px;" />
  <button onclick="changeName();">changeName</button>
  <br>
-->

    <div id="wrapper">
      <div class="message-container">
        <ul class="message-userlist">
            <li>
              <a id="myself" href="#">
                <span class="user-img"><img src="<%= image_url %>" alt=""></span>
                <span class="user-title"><%= screen_name %></span>
                <p class="user-desc"><%= name %></p>
              </a>
            </li>
            <li>
              <a href="#">
                <span class="user-img"><img src="/images/flower-mini.png" alt=""></span>
                <span class="user-title">れいゆ</span>
                <p class="user-desc">rei__yu</p>
              </a>
            </li>
            <li>
              <a class="active" href="#">
                <span class="user-img"><img src="/images/satomi-mini.png" alt=""></span>
                <span class="user-title">Rei</span>
                <p class="user-desc">revive_rei</p>
              </a>
            </li>
            <li>
              <a href="#">
                <span class="user-img"><img src="/images/satomii-mini.png" alt=""></span>
                <span class="user-title">さとみ</span>
                <p class="user-desc">min_min</p>
              </a>
            </li>
            <li>
              <a href="#">
                <span class="user-img"><img src="/images/pig.jpeg" alt=""></span>
                <span class="user-title">ゆかこ</span>
                <p class="user-desc">yu_ka_k0</p>
              </a>
            </li>
            <li>
              <a id="add-new-friend" href="#">
                <span class="user-img"><img src="/images/plus-mini.png"></span>
                <span class="new-friend-msg">Add New Friend</span>
              </a>
            </li>

          </ul>
        <div class="message-chatarea">
          <div class="message-log" id="msgArea">
            <!-- messages will appear here. class="message bubble-left" -->


          </div>
          <div class="message-typing">
  <!--          <textarea cols="20" rows="3"></textarea>  -->
            <input type="text" id="msg_input"/>
            <button onclick="sendMessage();">send</button>

          </div>
        </div>
      </div>
    </div>

    <script type="text/javascript">
     // msg_inputエリアに何か入力されたらRealtimeMessageを送信
    jQuery("#msg_input").on('keyup',function(e){
      var realTimeMessage = jQuery("#msg_input").val();
      updateRealtimeMessage(realTimeMessage);

    });

     // msg_inputエリアでMeta key + Enterが押されたらMessageをsend
    jQuery("#msg_input").keydown(function(e) {
      if((e.metaKey || e.ctrlKey) && e.keyCode == 13){
        sendMessage();
      }
    });

     // name_inputエリアでMeta key + Enterが押されたら名前を変更
    jQuery("#name_input").keydown(function(e) {
      if((e.metaKey || e.ctrlKey) && e.keyCode == 13){
        changeName();
      }
    });


    // 1.イベントとコールバックの定義
    var socketio = io.connect(location.origin);

    socketio.on("connected", function (name) {});
    socketio.on("send", function (data) {
      addMessage(data);
      clearRealtimeMessage();
    });
    socketio.on("disconnect", function () {});
    socketio.on("istyping", function (data) {
      if(data.id===myId){
        showMyRealtimeMessage(data)
      }else{
        showRealtimeMessage(data);
      }
    });

    // 2.イベントに絡ませる関数の定義
    function start(data) {
      socketio.emit("connected", {name:data.name, id:data.id});
    }

    function changeName() {
      var newName = $('#name_input')[0];
      myName = newName.value;
      socketio.emit("changename", newName.value); //文字列としての扱い
    }

    function sendMessage() {
      var textInput = $('#msg_input')[0];
      var msg = textInput.value;
      var img = myImg
      socketio.emit("send", {msg: msg, img: img}); //objectとしての扱い
      textInput.value = '';
    }

    function addMessage(data) {
      var newDom = document.createElement('div');
      newDom.setAttribute('class', 'message-content');
      newDom.innerHTML = "<span class='user-img'><img src='" + data.img + "'></span><span class='message-bubble'>" + data.msg + "</br><span class='message-timestamp'>" + new Date().toLocaleTimeString() + "</span>" + "</span></br>"
      msgArea.appendChild(newDom);
    }

    function clearRealtimeMessage(data) {
      if(data===myId){
        $("#myTyping").remove();
        myRealTimeTextBubble = '';
      }else{
        $("#isTyping").remove();
        realTimeTextBubble = '';
      }
    }


    function showRealtimeMessage(data) {
      if(data.msg){
        if(!realTimeTextBubble){
          setRealTimeTextBubble();
        }
        realTimeTextBubble.innerHTML ="<span class='user-img'><img src='" + data.img + "'></span><span class='message-bubble'>" + data.msg + "..." + "</span></br>";
      }else{
        clearRealtimeMessage(data.id);
      }
    }

    function showMyRealtimeMessage(data) {
      if(data.msg){
        if(!myRealTimeTextBubble){
          setMyRealTimeTextBubble();
        }
        myRealTimeTextBubble.innerHTML ="<span class='user-img'><img src='" + data.img + "'></span><span class='message-bubble'>" + data.msg + "..." + "</span></br>";
      }else{
        clearRealtimeMessage(data.id);
      }
    }

    function setRealTimeTextBubble() {
      realTimeTextBubble = document.createElement('div');   //TODO: dom操作じゃなくてcss操作にする
      realTimeTextBubble.setAttribute('class', 'message-content')
      realTimeTextBubble.id = 'isTyping';
      msgArea.appendChild(realTimeTextBubble);
    }

    function setMyRealTimeTextBubble() {
      myRealTimeTextBubble = document.createElement('div');   //TODO: dom操作じゃなくてcss操作にする
      myRealTimeTextBubble.setAttribute('class', 'message-content')
      myRealTimeTextBubble.id = 'myTyping';
      msgArea.appendChild(myRealTimeTextBubble);
    }

    function updateRealtimeMessage(msg) {
      socketio.emit("update", {msg: msg, img: myImg, id: myId});
    }

    // 3.開始処理
    var msgArea = document.getElementById('msgArea');
    var myName = "<%= screen_name %>";
    var myId = "<%= name %>";
    var myImg = "<%= image_url %>";
    var realTimeTextBubble = '';

    start({name:myName, id:<%= name %>});
    </script>

  </body>
</html>
